[
	{ "keys": ["super+ctrl+l"], "command": "alignment" },
	{ "keys": ["super+t"], "command": "side_bar_new_file"},
	{ "keys": ["super+shift+a"], "command": "find_all_under" },
	{ "keys": ["ctrl+shift+R"], "command": "goto_symbol_in_project" },
	{ "keys": ["super+g"], "command": "goto_symbol_in_project" },
	{ "keys": ["ctrl+g"], "command": "find_next" },


    //layout
	{"keys": ["ctrl+l", "ctrl+1"], "command": "set_layout", "args": { "cols": [0.0, 1.0],"rows": [0.0, 1.0],"cells": [[0, 0, 1, 1]]}},
	{"keys": ["ctrl+l", "ctrl+2"], "command": "set_layout", "args": { "cols": [0.0, 0.5, 1.0],"rows": [0.0, 1.0],"cells": [[0, 0, 1, 1], [1, 0, 2, 1]]}},
	{"keys": ["ctrl+l", "ctrl+3"], "command": "set_layout", "args": { "cols": [0.0, 1.0],"rows": [0.0, 0.5, 1.0],"cells": [[0, 0, 1, 1], [0, 1, 1, 2]]}},
	{"keys": ["ctrl+l", "ctrl+4"], "command": "set_layout", "args": { "cols": [0.0, 1.0],"rows": [0.0, 0.33, 0.66, 1.0],"cells": [[0, 0, 1, 1], [0, 1, 1, 2], [0, 2, 1, 3]]}},
	{"keys": ["ctrl+l", "ctrl+5"], "command": "set_layout", "args": { "cols": [0.0, 0.5, 1.0],"rows": [0.0, 0.5, 1.0],"cells":[[0, 0, 1, 1], [1, 0, 2, 1], [0, 1, 1, 2], [1, 1, 2, 2]]}},

	{ "keys": ["ctrl+1"], "command": "focus_group", "args": { "group": 0 } },
	{ "keys": ["ctrl+2"], "command": "focus_group", "args": { "group": 1 } },
	{ "keys": ["ctrl+3"], "command": "focus_group", "args": { "group": 2 } },
	{ "keys": ["ctrl+4"], "command": "focus_group", "args": { "group": 3 } },
	{ "keys": ["ctrl+m","ctrl+1"], "command": "move_to_group", "args": { "group": 0 } },
	{ "keys": ["ctrl+m","ctrl+2"], "command": "move_to_group", "args": { "group": 1 } },
	{ "keys": ["ctrl+m","ctrl+3"], "command": "move_to_group", "args": { "group": 2 } },
	{ "keys": ["ctrl+m","ctrl+4"], "command": "move_to_group", "args": { "group": 3 } },
	{ "keys": ["ctrl+0"], "command": "focus_side_bar" },

	{ "keys": ["ctrl+k", "ctrl+up"], "command": "new_pane" },
	{ "keys": ["ctrl+k", "ctrl+shift+up"], "command": "new_pane", "args": {"move": false} },
	{ "keys": ["ctrl+k", "ctrl+down"], "command": "close_pane" },
	{ "keys": ["ctrl+k", "ctrl+left"], "command": "focus_neighboring_group", "args": {"forward": false} },
	{ "keys": ["ctrl+k", "ctrl+right"], "command": "focus_neighboring_group" },
	{ "keys": ["ctrl+k", "ctrl+shift+left"], "command": "move_to_neighboring_group", "args": {"forward": false} },
	{ "keys": ["ctrl+k", "ctrl+shift+right"], "command": "move_to_neighboring_group" },


    //Gist
	{ "keys": ["ctrl+k", "ctrl+o"], "command": "gist_open_browser" },

	// save all
	{ "keys": ["super+k", "super+s"], "command": "save_all"},

	{ "keys": ["alt+up"], "command": "select_lines", "args": {"forward": false} },
	{ "keys": ["alt+down"], "command": "select_lines", "args": {"forward": true} },

	{ "keys": ["alt+d"], "command": "goto_definition" },

	// Setting for escape
	// { "keys": ["escape"], "command": "enter_insert_mode", "args":
	// 	{"insert_command": "move", "insert_args": {"by": "characters", "forward": true} },
	// 	"context":
	// 	[
	// 		{"key": "setting.command_mode"},
	// 		{"key": "selection_empty"}
	// 	]
	// },
	{ "keys": ["escape"], "command": "single_selection", "context":
		[
			{ "key": "num_selections", "operator": "not_equal", "operand": 1 }
		]
	},
	{ "keys": ["escape"], "command": "hide_panel", "args": {"cancel": true},
		"context":
		[
			{ "key": "panel_visible", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["escape"], "command": "hide_overlay", "context":
		[
			{ "key": "overlay_visible", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["escape"], "command": "hide_auto_complete", "context":
		[
			{ "key": "auto_complete_visible", "operator": "equal", "operand": true }
		]
	},


	// Auto-pair brackets
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
		]
	},
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
		]
	},
	//Auto pair for <% %>
	{	"keys": ["%"],
		"command": "insert_snippet", "context": [
		{
			"key": "selector", 
			"match_all": true, 
			"operand": "source.ruby, text.html.ruby, text.haml", 
			"operator": "equal"
		},
		{ 
			"key": "preceding_text",
			"operator": "regex_match",
			"operand": ".*<",
			"match_all": true }
		],
		"args": {"contents": "% $0 %>"}
	},

	// find within files
	{ "keys": ["ctrl+f3"], "command": "find_under" },
	{ "keys": ["ctrl+shift+f3"], "command": "find_under_prev" },
	{ "keys": ["f4"], "command": "find_under_prev" },

	// find over files
	{ "keys": ["f5"], "command": "next_result" },
	{ "keys": ["shift+f5"], "command": "prev_result" },

	{ "keys": ["ctrl+]"], "command": "indent" },
	{ "keys": ["ctrl+["], "command": "unindent" },

	{ "keys": ["ctrl+["], "command": "exit_insert_mode",
		"context":
		[
			{ "key": "setting.command_mode", "operand": false },
			{ "key": "setting.is_widget", "operand": false },
			{ "key": "setting.vintage_ctrl_keys" },
			{ "key": "num_selections", "operator": "equal", "operand": 1 },
			{ "key": "selection_empty"},

		]
	},



	{ "keys": ["tab"], "command": "unbound"},
	{ "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": true} },
	{ "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": false},
		"context":
		[
			{ "key": "setting.tab_completion", "operator": "equal", "operand": true }
		]
	},
	// { "keys": ["tab"], "command": "commit_completion", "context":
	// 	[
	// 		{ "key": "auto_complete_visible" },
	// 		{ "key": "setting.auto_complete_commit_on_tab" }
	// 	]
	// }

	// { "keys": ["tab"], "command": "commit_completion", "context":
	// 	[
	// 		{ "key": "auto_complete_visible" },
	// 		{ "key": "setting.auto_complete_commit_on_tab", "operator": "equal", "operand": true }
	// 	]
	// },

	{ "keys": ["tab"], "command": "reindent", "context":
		[
			{ "key": "setting.auto_indent", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_match", "operand": "^$", "match_all": true },
			{ "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true }
		]
	},
	{ "keys": ["tab"], "command": "indent", "context":
		[
			{ "key": "text", "operator": "regex_contains", "operand": "\n" }
		]
	},
	{ "keys": ["tab"], "command": "next_field", "context":
		[
			{ "key": "has_next_field", "operator": "equal", "operand": true }
		]
	}, 

	{ "keys": ["tab"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
		// Tab out of quotes, and closing brackets
		{ "key": "auto_complete_visible", "operator": "equal", "operand": false },
		{ "key": "following_text", "operator": "regex_contains", "operand": "^[	 \\^\\\\,.;:=<>')}\"\\[\\]]", "match_all": true },
		{ "key": "has_next_field", "operator": "equal", "operand": false },
		{ "key": "selection_empty"}
		]
	},

	{ "keys": ["alt+ctrl+l"], "command": "list_links" },

	{ "keys": ["super+shift+up"], "command": "swap_line_up" },
	{ "keys": ["super+shift+down"], "command": "swap_line_down" },

	// Clojure REPL
	// 
	// 	{ "keys": ["ctrl+,", "s"], "command": "repl_transfer_current", "args": {"scope": "selection"}},
	{ "keys": ["super+k", "f"], "command": "repl_transfer_current", "args": {"scope": "file"}},
	{ "keys": ["super+k", "l"], "command": "repl_transfer_current", "args": {"scope": "lines"}},
	{ "keys": ["super+k", "b"], "command": "repl_transfer_current", "args": {"scope": "block"}},

]
